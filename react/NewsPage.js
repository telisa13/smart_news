import React from 'react';
import {render} from 'react-dom';
import moment from 'moment';
import {CopyToClipboard} from 'react-copy-to-clipboard';

class App extends React.Component{
  constructor(props){
    super(props);
    this.state = {
      news: null,
      recommended: [],
    };
  }
  componentDidMount(){
    const {href} = window.location;
    let id = parseInt(href.substr(href.lastIndexOf('/')+1));
    if (!id) {
      alert('Запрашиваемая новость не существует');
      return;
    }
    fetch(`/news/one/${id}`,{
      credentials: 'include'
    })
    .then(res => res.json())
    .then(response => {
      if(response.status) {
        this.setState({news: response.data.news,
          userCanLike: response.data.userCanLike,
          userLiked: response.data.userLiked,
          tags: response.data.tags,
          isAuth: response.data.isAuth,
        });

        document.title = `${response.data.news.title} | SMART NEWS`;
      }
    })
    .catch(err => {
      console.log(err);
    });

    setTimeout(() => {
      fetch(`/news/one/${id}/recommended`,{
        credentials: 'include'
      })
      .then(res => res.json())
      .then(response => {
        if(response.status) {
          this.setState({ recommended: response.data.news});
        }
      })
      .catch(err => {
        console.log(err);
      });

    }, 300);
  }

  onLike(){
    const{news} = this.state;
    fetch(`/news/one/${news.id}`,{
      method: 'POST',
      credentials: 'include'
    })
    .then(res => res.json())
    .then(response => {
      console.log(response);
      if(response.status) {
        this.setState({userCanLike: false, userLiked: true});
      }
    })
    .catch(err => {
      console.log(err);
    });
  }

  onShare(){
    const{news} = this.state;
    fetch(`/news/share/${news.id}`,{
      method: 'POST',
      credentials: 'include'
    })
    .then(res => res.json())
    .then(response => {
      console.log(response);
      if(!response.status) {
        alert(response.error);
        return;
      }
      alert('Вы успешно поделились');
    })
    .catch(err => {
      console.log(err);
    });
  }


  get recommended(){
    const { recommended } = this.state;
    return recommended.map( n =>
      <a href={`/news/${n.id}`} className="recommended clearA" style={{backgroundImage: `url(${n.image}`}}>
        <img src={n.source.icon} className="icon" alt=""/>
        <span>
          {n.title}
        </span>
      </a>)
  }

  render(){
    const {news, userCanLike, userLiked, tags, isAuth } = this.state;
    // console.log(this.state);

    let dt = null;
    let momentDt = null;
    let beautyDate = null;
    let html = null;
    let svg = null;
    // let userCanLike = null;
    // let userLiked = null;
    if(news) {
      dt = new Date(news.datetime);
      moment.locale('ru');
      momentDt = moment(dt);
      beautyDate = momentDt.format("Do MMM YY");

      html = `<div class="image" style='background-image: url(${news.image})'><span>${news.description}</span></div>` + news.body;

      const svgClass = userLiked ? 'liked': '';
      svg = (<svg viewBox="0 0 191.928 191.929" className={svgClass}>
        <g>
          <g>
            <path d="M188.987,100.227c-4.117-44.605-37.466-87.036-81.402-97.751C50.668-11.407,4.618,35.214,2.566,89.65    c-1.111,29.474,9.515,62.657,29.384,84.602c17.061,18.842,44.784,19.855,68.353,15.624c0.725,0.758,1.729,1.203,2.984,1.042    c27.531-3.559,51.783-8.892,70.133-31.373C186.935,142.987,190.909,121.031,188.987,100.227z M168.471,151.732    c-15.373,22.778-41.223,26.963-66.354,30.553c-1.277,0.183-2.133,0.91-2.625,1.865c-22.407,0.292-44.339,1.239-61.872-15.569    C17.836,149.614,10.57,115.949,10.5,89.65C10.354,34.277,62.53-4.469,115.026,13.036c36.229,12.08,60.992,50.57,65.452,87.19    C182.694,118.404,178.715,136.552,168.471,151.732z" fill="#FFDA44"/>
            <path d="M108.359,34.761c-0.521,1.298-0.905,2.678-1.235,4.091c-2.5-1.555-5.289-2.728-7.877-4.105    c-3.998-2.127-7.999-4.246-11.97-6.419c8.46,1.479,16.901,3.222,25.351,4.196c3.599,0.414,3.865-4.362,1.638-6.043    c-8.515-6.416-22.996-5.9-33.261-7.308c-2.104-0.289-4.399,0.472-4.95,2.811c-3.489,14.814-8.246,37.134-6.431,56.127    c-0.637,0.609-0.782,1.704,0.23,2.255l0.008,0.005c0.87,6.913,2.66,13.324,5.82,18.656c-1.349,0.842-1.291,3.448,0.568,3.94    c4.858,1.285,9.934,1.62,14.929,2.002c4.74,0.362,9.752,1.58,14.51,1.196c3.297-0.266,4.264-3.474,3.018-5.592    c1.218-11.114,2.209-22.247,3.597-33.345c1.233-9.855,4.985-22.906,1.479-32.469C112.782,32.029,109.403,32.158,108.359,34.761z     M92.778,99.37c-3.565,0.164-7.177,0.053-10.767-0.191c-1.62-4.26-2.721-8.851-3.44-13.628c3.943,2.491,7.827,5.087,11.714,7.641    c2.137,1.403,5.046,3.943,8.057,5.758C96.467,99.103,94.597,99.287,92.778,99.37z M78.039,81.34    c-0.308-3.052-0.425-6.179-0.464-9.328c4.141,2.83,8.248,5.704,12.302,8.667c4.468,3.266,8.989,7.794,14.104,10.159    c-0.011,2.017-0.033,4.033,0.04,6.049C95.448,91.682,86.921,86.166,78.039,81.34z M104.081,85.424    c-3.174-2.55-6.916-4.576-10.241-6.769c-5.366-3.538-10.808-6.962-16.285-10.329c0.06-3.511,0.26-7.047,0.57-10.568    c4.215,3.177,8.442,6.337,12.686,9.477c4.581,3.389,8.927,7.42,13.675,10.599C104.334,80.364,104.168,82.893,104.081,85.424z     M104.795,72.525c-3.389-2.273-7-4.312-10.321-6.601c-5.327-3.672-10.659-7.335-16.025-10.949    c0.276-2.659,0.616-5.298,0.988-7.912c3.982,3.091,8.075,6.038,12.231,8.887c3.875,2.657,8.03,6.717,12.676,7.834    c0.376,0.091,0.736,0.037,1.068-0.086C105.211,66.636,104.999,69.579,104.795,72.525z M105.597,60.215    c-3.256-2.693-7.29-4.403-10.887-6.634c-5.012-3.111-9.962-6.356-14.766-9.791c0.413-2.624,0.867-5.2,1.342-7.729    c6.037,4.442,11.608,9.539,17.539,14.106c1.787,1.376,4.375,3.939,6.909,3.848C105.698,56.126,105.672,58.21,105.597,60.215z     M105.827,49.199c-0.121-0.086-0.205-0.145-0.385-0.273c-0.85-0.605-1.822-1.037-2.712-1.585    c-2.843-1.753-5.575-3.692-8.316-5.597c-4.157-2.89-8.243-5.962-12.524-8.69c0.37-1.844,0.735-3.702,1.13-5.459    c0.877,0.14,1.752,0.304,2.628,0.453c-0.859,0.405-1.232,1.734-0.177,2.414c3.522,2.268,7.109,4.408,10.73,6.514    c3.381,1.967,6.648,4.421,10.187,6.088c-0.252,2.003-0.422,4.046-0.511,6.111C105.86,49.182,105.844,49.193,105.827,49.199z" fill="#FFDA44"/>
            <path d="M112.679,126.49c-0.849-3.238-5.379-3.026-6.329,0c-0.164,0.521-0.279,1.053-0.42,1.579    c0.175-0.716,0.115-1.491-0.23-2.116c-2.189-3.935-8.351-3.227-12.062-3.113c-5.613,0.172-11.41,0.358-17.044,1.02    c-0.979-0.614-2.33-0.485-3.128,0.397c-0.059,0.009-0.12,0.013-0.179,0.022c-1.307,0.207-1.481,2.137-0.536,2.822    c-0.433,8.129-0.875,16.217-2.494,24.219c-0.345,1.705,0.473,4.129,2.5,4.402c10.671,1.44,21.332,1.753,32.088,1.798    c1.752,0.009,2.982-1.155,3.561-2.711C111.259,147.14,114.827,134.683,112.679,126.49z M103.286,130.156    c1.371,0.151,2.328-0.86,2.635-2.051c-0.709,2.681-1.143,5.427-1.518,8.19c-1.66-1.214-3.441-2.274-5.156-3.403    c-1.655-1.088-3.227-2.289-4.77-3.524C97.428,129.602,100.377,129.833,103.286,130.156z M77.604,149.089    c0.342-3.478,0.477-6.961,0.486-10.447c1.668,1.981,3.413,3.914,5.356,5.764c1.41,1.343,3.508,3.527,5.852,5.482    C85.396,149.729,81.498,149.483,77.604,149.089z M102.122,150.128c-1.205-0.001-2.41-0.017-3.615-0.028    c-1.437-0.908-3.122-1.534-4.549-2.414c-3.088-1.903-5.878-4.291-8.602-6.673c-2.402-2.099-4.901-4.188-7.318-6.282    c-0.049-2.272-0.124-4.549-0.237-6.825c0.332,0.04,0.666,0.063,0.998,0.101c-0.56,0.668-0.64,1.719,0.357,2.245    c5.04,2.657,9.761,6.059,14.337,9.433c2.822,2.081,5.924,5.429,9.322,6.518c0.046,0.015,0.093,0.008,0.138,0.018    C102.708,147.528,102.476,148.838,102.122,150.128z M96.128,137.221c-4.612-3.02-9.182-6.256-14.048-8.879    c3.093,0.296,6.197,0.525,9.296,0.761c3.538,3.869,8.041,7.945,12.625,10.234c-0.125,0.993-0.252,1.986-0.389,2.979    C101.487,140.261,98.459,138.747,96.128,137.221z" fill="#FFDA44"/>
          </g>
        </g>
      </svg>);



    }

    return (
      <div className="news_container">

        {news?
          <div className="news">
            <header>

              <h1>{news.title}</h1>

              <div className="info">
                <a href={`/category/${news.category.id}`} className="clearA">Категория: {news.category.name}</a>
                <div className="item_views">
                  <span>{news.views}</span>

                  <img src="/images/view.svg"/>
                </div>
                <time dateTime={dt}>{beautyDate}</time>
              </div>

              <div className="row">
                <img src={news.source.icon} alt=""/>
                <a href={news.link} className="clearA" target="_blank">{`Открыть на ${news.source.name}`}</a>
              </div>

              <div className="row" style={{marginTop: '10px'}}>
                {isAuth &&<div className="share" title="Поделиться с друзьями" onClick={() => this.onShare()}>
                  <svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px"
                       width="48.665px" height="48.665px" viewBox="0 0 48.665 48.665" className="site">
                    <g>
                      <g>
                        <path d="M40.332,31.592c-2.377,0-4.515,1-6.033,2.598l-17.737-8.686c0.061-0.406,0.103-0.82,0.103-1.246
                          c0-0.414-0.04-0.818-0.098-1.215l17.711-8.589c1.519,1.609,3.666,2.619,6.054,2.619c4.603,0,8.333-3.731,8.333-8.333
                          c0-4.603-3.73-8.333-8.333-8.333s-8.333,3.73-8.333,8.333c0,0.414,0.04,0.817,0.098,1.215l-17.709,8.589
                          c-1.519-1.609-3.666-2.619-6.054-2.619C3.73,15.925,0,19.656,0,24.258c0,4.603,3.73,8.333,8.333,8.333
                          c2.377,0,4.515-1,6.033-2.596l17.736,8.685c-0.062,0.406-0.104,0.82-0.104,1.245c0,4.604,3.73,8.333,8.333,8.333
                          s8.333-3.729,8.333-8.333C48.665,35.322,44.935,31.592,40.332,31.592z"/>
                      </g>
                    </g>
                    </svg>
                </div>}
                <a href={`https://twitter.com/intent/tweet?text=${window.location.href}`} className="clearA share" target="_blank" title="Поделиться в Twitter">
                  <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px"
                     viewBox="0 0 410.155 410.155" className="twitter">
                  <path d="M403.632,74.18c-9.113,4.041-18.573,7.229-28.28,9.537c10.696-10.164,18.738-22.877,23.275-37.067
                    l0,0c1.295-4.051-3.105-7.554-6.763-5.385l0,0c-13.504,8.01-28.05,14.019-43.235,17.862c-0.881,0.223-1.79,0.336-2.702,0.336
                    c-2.766,0-5.455-1.027-7.57-2.891c-16.156-14.239-36.935-22.081-58.508-22.081c-9.335,0-18.76,1.455-28.014,4.325
                    c-28.672,8.893-50.795,32.544-57.736,61.724c-2.604,10.945-3.309,21.9-2.097,32.56c0.139,1.225-0.44,2.08-0.797,2.481
                    c-0.627,0.703-1.516,1.106-2.439,1.106c-0.103,0-0.209-0.005-0.314-0.015c-62.762-5.831-119.358-36.068-159.363-85.14l0,0
                    c-2.04-2.503-5.952-2.196-7.578,0.593l0,0C13.677,65.565,9.537,80.937,9.537,96.579c0,23.972,9.631,46.563,26.36,63.032
                    c-7.035-1.668-13.844-4.295-20.169-7.808l0,0c-3.06-1.7-6.825,0.485-6.868,3.985l0,0c-0.438,35.612,20.412,67.3,51.646,81.569
                    c-0.629,0.015-1.258,0.022-1.888,0.022c-4.951,0-9.964-0.478-14.898-1.421l0,0c-3.446-0.658-6.341,2.611-5.271,5.952l0,0
                    c10.138,31.651,37.39,54.981,70.002,60.278c-27.066,18.169-58.585,27.753-91.39,27.753l-10.227-0.006
                    c-3.151,0-5.816,2.054-6.619,5.106c-0.791,3.006,0.666,6.177,3.353,7.74c36.966,21.513,79.131,32.883,121.955,32.883
                    c37.485,0,72.549-7.439,104.219-22.109c29.033-13.449,54.689-32.674,76.255-57.141c20.09-22.792,35.8-49.103,46.692-78.201
                    c10.383-27.737,15.871-57.333,15.871-85.589v-1.346c-0.001-4.537,2.051-8.806,5.631-11.712c13.585-11.03,25.415-24.014,35.16-38.591
                    l0,0C411.924,77.126,407.866,72.302,403.632,74.18L403.632,74.18z"/>
                  </svg>
                </a>
                <a href={`https://www.facebook.com/sharer/sharer.php?u=${window.location.href}`} className="clearA share" target="_blank" title="Поделиться в Facebook">
                  <svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px"
                     viewBox="0 0 112.196 112.196" className="facebook">
                      <g>
                        <circle cx="56.098" cy="56.098" r="56.098"/>
                        <path d="M70.201,58.294h-10.01v36.672H45.025V58.294h-7.213V45.406h7.213v-8.34
                          c0-5.964,2.833-15.303,15.301-15.303L71.56,21.81v12.51h-8.151c-1.337,0-3.217,0.668-3.217,3.513v7.585h11.334L70.201,58.294z"/>
                      </g>
                  </svg>
                </a>
                <a href={`#`} className="clearA share" target="_blank" title="Отправить на почту">
                  <svg className="email" version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg"  x="0px" y="0px"
                       viewBox="0 0 512 512"  >
                    <rect x="64" y="64" width="384" height="384"/>
                    <polygon  points="256,296.384 448,448 448,148.672 "/>
                    <path  d="M464,64h-16L256,215.616L64,64H48C21.504,64,0,85.504,0,112v288c0,26.496,21.504,48,48,48h16V148.672
                    l192,147.68L448,148.64V448h16c26.496,0,48-21.504,48-48V112C512,85.504,490.496,64,464,64z"/>
                  </svg>
                </a>
                <CopyToClipboard text={window.location.href}>
                  <div className="share" title="Скопировать">
                    {/*<svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px"*/}
                         {/*viewBox="0 0 477.867 477.867" className="copy">*/}
                      {/*<g>*/}
                        {/*<g>*/}
                          {/*<path d="M341.333,85.333H51.2c-28.277,0-51.2,22.923-51.2,51.2v290.133c0,28.277,22.923,51.2,51.2,51.2h290.133*/}
                            {/*c28.277,0,51.2-22.923,51.2-51.2V136.533C392.533,108.256,369.61,85.333,341.333,85.333z M358.4,426.667*/}
                            {/*c0,9.426-7.641,17.067-17.067,17.067H51.2c-9.426,0-17.067-7.641-17.067-17.067V136.533c0-9.426,7.641-17.067,17.067-17.067*/}
                            {/*h290.133c9.426,0,17.067,7.641,17.067,17.067V426.667z"/>*/}
                        {/*</g>*/}
                      {/*</g>*/}
                      {/*<g>*/}
                        {/*<g>*/}
                          {/*<path d="M426.667,0h-307.2c-28.277,0-51.2,22.923-51.2,51.2c0,9.426,7.641,17.067,17.067,17.067S102.4,60.626,102.4,51.2*/}
                            {/*s7.641-17.067,17.067-17.067h307.2c9.426,0,17.067,7.641,17.067,17.067v307.2c0,9.426-7.641,17.067-17.067,17.067*/}
                            {/*s-17.067,7.641-17.067,17.067s7.641,17.067,17.067,17.067c28.277,0,51.2-22.923,51.2-51.2V51.2*/}
                            {/*C477.867,22.923,454.944,0,426.667,0z"/>*/}
                        {/*</g>*/}
                      {/*</g>*/}

                    {/*</svg>*/}
                    <svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px"
                       viewBox="0 0 477.867 477.867" className="copy">
                      <g>
                        <g>
                          <path d="M341.333,85.333H51.2c-28.277,0-51.2,22.923-51.2,51.2v290.133c0,28.277,22.923,51.2,51.2,51.2h290.133
                            c28.277,0,51.2-22.923,51.2-51.2V136.533C392.533,108.256,369.61,85.333,341.333,85.333z"/>
                        </g>
                      </g>
                      <g>
                        <g>
                          <path d="M426.667,0h-307.2c-28.124-0.001-50.984,22.684-51.2,50.807c0,0.137,0,0.256,0,0.393h273.067
                            c47.105,0.056,85.277,38.228,85.333,85.333V409.6c0.137,0,0.256,0,0.393,0c28.124-0.216,50.808-23.076,50.807-51.2V51.2
                            C477.867,22.923,454.944,0,426.667,0z"/>
                        </g>
                      </g>


                    </svg>
                  </div>
                </CopyToClipboard>
              </div>


            </header>
            <div className="row">
              <p className="body" dangerouslySetInnerHTML={{__html: html}}/>
            </div>

            <div className="button_container">

              <div className="tags">
                <h3 className="tags_title">Теги</h3>
                {tags.map(t => <a href={`/search?q=${t.name}`} className='clearA'>{t.name}</a>)}
              </div>

              <div className="button">
                {userCanLike&&!userLiked&&
                <button onClick={()=>this.onLike()}>

                  {svg}
                  <span>Мне это интересно</span>
                </button>}

                {userLiked&&
                <button className="liked">
                  {svg}
                  <span>Вам интересна эта новость</span>
                </button>}
              </div>

            </div>


          </div>
          :
          <div className="loading"><div></div><div></div><div></div></div>
        }

        <div className="recommendedNews">
          <h3>Рекомендованные новости</h3>
          {this.recommended}
        </div>
      </div>
      );
  }
}

render(
  <App/>,
  document.getElementById('news_app'));